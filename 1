def sorted_merge(a, b):
    new = []
    end_a = len(a)
    end_b = len(b)
    idx_a = 0
    idx_b = 0
    new_i = 0

    while idx_a <= end_a and idx_b <= end_b:
        if a[idx_a] < b[idx_b]:
            new[new_i] = a[idx_a]
            idx_a += 1
        elif b[idx_b] < a[idx_a]:
            new[new_i] = b[idx_b]
            idx_b += 1

        new_i += 1

    return new

def merge_sort(L):
    n = len(L)

    if n == 1:
        return L

    mid = n/2
    first_half = merge_sort(L[:mid])
    last_half = merge_sort(L[mid+1:])

    return sorted_merge(first_half, last_half)

print(merge_sort([7,2,4,5,3,1]))

L=[7,2,4,5,3,1]

print(L[:2])
